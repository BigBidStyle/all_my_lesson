# Практическая работа.
# Задача 1. Машина 3
# Вам предстоит снова немного видоизменить класс Toyota из прошлого урока. На всякий случай вот описание класса.

# Четыре атрибута:

# Цвет машины (например, красный),
# Цена (один миллион),
# Максимальная скорость (200),
# Текущая скорость (ноль).

# Два метода:

# Отображение информации об объекте класса.
# Метод, который позволяет устанавливать текущую скорость машины.

# Теперь все четыре атрибута должны инициализироваться при создании экземпляра класса (то есть передаваться в init).
# Реализуйте такое изменение класса.

# # Решение задачи.
# class Toyota:
#
#     def __init__(self, color, price, max_speed, now_speed):
#         self.color = color
#         self.price = price
#         self.max_speed = max_speed
#         self.now_speed = now_speed
#
#     def info_car(self):
#         print('\nColor car: {}\nCar cost: {}\nMaximum speed: {}\nNow speed: {}'
#               .format(self.color, self.price, self.max_speed, self.now_speed))
#
#     def new_speed(self, new_speed):
#         self.now_speed = new_speed
#
# car = Toyota('Red', 1, 15, 0)
# car.new_speed(100)
# car.info_car()

# Задача 2. Координаты точки
# Объект «Точка» на плоскости имеет координаты X и Y. При создании новой точки могут передаваться пользовательские
# значения координат, по умолчанию x = 0, y = 0.
#
# 1. Реализуйте класс, который будет представлять эту точку.
# 2. Напишите метод, который предоставляет информацию о ней.
# 3. Также внутри класса пропишите счётчик, который будет отвечать за количество созданных точек.
#
# Подсказка: счётчик можно объявить внутри самого класса и увеличивать его в методе __init__.

# Решение задачи.
class Point:
    count_point = 0

    def __init__(self, x = 0 , y = 0):
        self.x = x
        self.y = y
        Point.count_point += 1
        self.info_point()

    def info_point(self):
        print('Точка {} имеет координаты: x = {}, y = {}'.format(self.count_point, self.x, self.y))

point_1 = Point(1, 2)
point_2 = Point()
point_3 = Point(5, 5)

