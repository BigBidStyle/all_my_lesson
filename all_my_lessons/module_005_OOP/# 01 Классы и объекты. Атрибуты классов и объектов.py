# obj.__doc__ # <-- содержит строку с описанием класса.
# obj.__dict__ # <-- содержит набор атрибутов экземпляра класса.
# type(a) # <-- Определение отношения экземпляра "a" к какому классу
# type(a) == Point # <-- Проверка принадлежности экземпляра "а" к классу "Point
# isinstance(a, Point) # <-- Проверка cуществования экземпляра 'а' в классе 'Point
# getattr(obj, name, default) # <-- Возвращает значение атрибута объекта True or False.
# hasattr(obj, name) # <-- проверяет на наличии атрибута name в obj
# setattr(obj, name, value) # <-- задает значение атрибута (если атрибут не существует, то он создается)
# delattr(obj, name) # <-- удаляет атрибут с именем name.
# del Point.prop # Удаление атрибута в классе...
# -------------------------------------------------------------------------------------------------------------------- #
# Пример
class Point:  # Определяем класс. Имя класса пишется с большой буквы.
    """Класс для предоставления координат точек на плоскости."""
    # Переменные внутри класса называют атрибутами класса или его свойствами.

    prop = None  # Определяем атрибут класса.
    color = 'red'  # Определяем атрибут или свойства класса.
    circle = 2  # Определяем атрибут или свойства класса.

Point.color = 'black'  # Присвоить или поменять на новое значение 'black' атрибуту 'color' классу 'Point'.
print(Point.circle)  # Прочитать какое-то свойство или атрибут определенного класса.
print(Point.__dict__)  # Увидеть все атрибуты класса.

a = Point()  # Создание экземпляра класса.
b = Point()  # Создание экземпляра класса.

print(type(a))  # <-- Определение отношения экземпляра 'а' к какому классу.
print(type(a) == Point)    # <-- Проверка принадлежности экземпляра "а" к классу "Point"
print(isinstance(a, Point))     # <-- Проверка существования экземпляра 'а' в классе 'Point'

a.color = 'green'  # Присвоили экземпляру 'a' классу Point значение 'green'.
print(a.color)  # Проверяем.

Point.type_tp = 'disc'  # Присвоить классу 'Point' новый атрибут
setattr(Point, 'prop', 1)  # Присвоить классу 'Point' новый атрибут или поменять значение существующему.
print(Point.type_tp)  # Проверяем.
print(Point.prop)   # Проверяем.
res = Point.circle  # Присвоить какой-либо переменой значение атрибута.

# Если мы пытаемся получить доступ к несуществующему атрибуту, то получим ошибку... (...() takes no arguments)
# print(Point(a)) <-- Ошибка.
print(getattr(Point, 'a', False))  # Если атрибут существует, то вернет значение, иначе вернет False.
print(hasattr(Point, 'prop'))  # Проверка существования атрибута в классе, если есть такой атрибут, то возвращает True

# del Point.prop # Удаление атрибута в классе...
# delattr(Point, 'type_tp') # Удаление атрибута в классе...

# if getattr(a, 'color'): # Если существует атрибут.
#     delattr(a, 'color')   # Удаляем его.
#     print(a.__dict__) 1
#
# print(Point.__doc__) # <-- Выводит комментарий написанный сразу после объявления класса.
