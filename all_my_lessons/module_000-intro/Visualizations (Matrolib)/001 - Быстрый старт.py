import matplotlib.pyplot as plt
import numpy as np
# -------------------------------------------------------------------------------------------------------------------- #
# region 1.3 Построение графика.
# x = np.linspace(0, 500, 50) # -->
# start — начало последовательности,
# stop — конец последовательности,
# num — количество данных в выборке (значение по умолчанию — 50),
# endpoint — определение конца выборки (если True (по умолчанию), то выборка заканчивается на последнем значении,
# если False — последнее значение в выборку не включается).
# y = x
#
# plt.title('Линейная зависимость y = x')     # заголовок
# plt.xlabel('x')     # ось абсцисс
# plt.ylabel('y')     # ось ординат
# plt.grid()  # включение отображения сетки
# plt.plot(x, y, "r--")   # r <-- Цвет линии и -- <-- это стиль линии.
# plt.show()
# endregion 1.3 Построение графика.
# -------------------------------------------------------------------------------------------------------------------- #
# region 1.4 Несколько графиков на одном поле.
# x = np.linspace(0, 10, 50, True)
# y1 = x
# # Квадратичная зависимость
# y2 = [i**2 for i in x]
# # Построение графика
# plt.title('Зависимости: y1 = x, y2 = x^2')    # заголовок
# plt.xlabel('x')     # ось абсцисс
# plt.ylabel('y1, y2')    # ось ординат
# plt.grid()  # включение отображения сетки
# plt.plot(x, y1, x, y2)  # построение графика
# plt.show()
# endregion 1.4 Несколько графиков на одном поле.
# -------------------------------------------------------------------------------------------------------------------- #
# region 1.5 Представление графиков на разных поляx.
# x = np.linspace(0, 10, 50)
# y1 = x  # Линейная зависимость
# y2 = [i**2 for i in x]  # Квадратичная зависимость
# # Построение графиков
# plt.figure(figsize=(9, 9))  # функция для задания глобальных параметров отображения графиков.
# # В неё через параметр figsize передаётся кортеж из двух элементов, определяющий общий размер фигуры.
#
# plt.subplot(2, 1, 1)    # функция для задания местоположения поля с графиком.
# # Существует несколько способов задания областей для вывода графиков. В примере мы воспользовались вариантом,
# # который предполагает передачу трёх аргументов:
# # первый аргумент количество строк,
# # второй — столбцов в формируемом поле,
# # третий — индекс (номер поля, считаем сверху вниз, слева направо).
#
# plt.plot(x, y1)     # построение графика
# plt.title('Зависимости: y1 = x, y2 = x^2')  # заголовок
# plt.ylabel('y1', fontsize=14)   # ось ординат
# plt.grid(True)  # включение отображение сетки
#
# plt.subplot(2, 1, 2)
# plt.plot(x, y2)     # построение графика
# plt.title('Будет ли здесь текст?')  # заголовок
# plt.xlabel('x', fontsize=12)    # ось абсцисс
# plt.ylabel('y2', fontsize=12)   # ось ординат
# plt.grid(True)  # включение отображение сетки
# plt.show()
# endregion 1.5 Представление графиков на разных поляx.
# -------------------------------------------------------------------------------------------------------------------- #
# region 1.8 (Рисунок) — Основные элементы графика.
# import matplotlib.pyplot as plt
# from matplotlib.ticker import (MultipleLocator, FormatStrFormatter,AutoMinorLocator)
# import numpy as np
# x = np.linspace(0, 10, 10)
# y1 = 4*x
# y2 = [i**2 for i in x]
# fig, ax = plt.subplots(figsize=(8, 6))
# ax.set_title('Графики зависимостей: y1=4*x, y2=x^2', fontsize=16)   # Заголовок
# ax.set_xlabel('x', fontsize=14)     # Подпись оси Х
# ax.set_ylabel('y1, y2', fontsize=14)     # Подпись оси у
# ax.grid(which='major', linewidth=1.2)       # Основная сетка и толшина.
# ax.grid(which='minor', linestyle='--', color='gray', linewidth=0.5) # Второстепенная, стиль, цвет и толшина.
# ax.scatter(x, y1, c='red', label='y1 = 4*x')    # Точечный график!
# ax.plot(x, y2, label='y2 = x^2')    # Линейный график
# ax.legend() # Легенда (Это в углу названия)
# ax.xaxis.set_minor_locator(AutoMinorLocator())
# ax.yaxis.set_minor_locator(AutoMinorLocator())
# ax.tick_params(which='major', length=10, width=2)   # Разметка основной сетки на оси координат.
# ax.tick_params(which='minor', length=5, width=1)    # Разметка Второстепенной сетки на оси оординат.
# plt.show()
# endregion # region 1.8 (Рисунок) — Основные элементы графика.
# -------------------------------------------------------------------------------------------------------------------- #
