# Создадим словарь с двумя парами ключ–значение
results = {"pass": 0, "fail": 0}
print(results)

# Добавим третью пару ключ–значение
results["withdrawal"] = 1
print(results)

# Обновим значения двух ключей в словаре
results["pass"] = 3
results["fail"] = results["fail"] + 1
print(results)

# Выведем значения, ассоциированные с ключами fail, pass и withdrawal соответственно
print(results["pass"], results["fail"], results["withdrawal"])

# Удаление элемента в словаре.
results.pop("pass")
print(results)

# Склеивание словарей
f"dict_1.update(dick_2)"

# Считаем количество ключей-значений в словаре.
print(f"Количество ключей в словаре: {len(results)}")

num_1 = {1, 2, 3, 4, 5}
num_2 = {4, 5, 6, 7, 8}
print(num_1.intersection(num_2))                                 # {4, 5}
# то же самое получиться если написать код вот так
print(num_1 & num_2)                                                # {4, 5}
print(num_1.union(num_2))                                         # {1, 2, 3, 4, 5, 6, 7, 8}
print(num_1.difference(num_2))                                   # {1, 2, 3}
print(num_1 - num_2)                                                # {1, 2, 3}
print(num_2 - num_1)                                                # {8, 6, 7}

#-----------------------------------
import random
nums_1 = [29, 17, 10, 15, 13, 22, 12, 22, 7, 24, 26, 3, 11, 2, 3, 16, 19, 21, 2, 3, 8, 27, 2, 17, 2, 20, 12, 21, 3, 1]
nums_2 = [16, 21, 30, 24, 5, 7, 23, 13, 11, 5, 21, 5, 19, 9, 12, 9, 15, 16, 29, 8, 16, 1, 22, 15, 16, 9, 1, 13, 21, 21]
# Убираем повторяющиеся элементы.
nums_set_1 = set(nums_1) # {1, 2, 3, 7, 8, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 24, 26, 27, 29}
nums_set_2 = set(nums_2) # {1, 5, 7, 8, 9, 11, 12, 13, 15, 16, 19, 21, 22, 23, 24, 29, 30}
# Затем удаляет минимальный элемент из каждого множества
nums_set_1.discard(min(nums_set_1))
nums_set_2.discard(min(nums_set_2))
# добавляем случайное число в диапазоне от 100 до 200.
nums_set_1.add(random.randint(100, 200))
nums_set_2.add(random.randint(100, 200))
# Вывести все элементы множеств (объединение).
print(nums_set_1 | nums_set_2)
# Вывести только общие элементы (пересечение).
print(nums_set_1 & nums_set_2)
# Вывести элементы, входящие в nums_2, но не входящие в nums_1.
print(nums_set_2 - nums_set_1)
#-----------------------------------

# Цикл For (итераций по ключам словаря)
# Создаем словарь
constants = {"pi": 3.14, "e": 2.71, "root 2": 1.41}
# Выводим на экран все ключи и значения в отформатированном виде
for k in constants:
    print("Значение, ассоциированное с ключом", k, ": ", constants[k])

f"Как найти сумму значений в словаре!!!"
# Создаем словарь
constants = {"pi": 3.14, "e": 2.71, "root 2": 1.41}
# Рассчитаем сумму значений в словаре
total = 0
for v in constants.values():
    total = total + v
# Выводим результат
print("Сумма значений составляет", total)

# Считаем, сколько раз пользователь ввел каждое значение
counts = {}
# Цикл, пока количество уникальных значений в словаре не достигнет пяти
while len(counts) < 5:
    s = input("Введите строку: ")
    # Если в словаре уже есть такой ключ, увеличиваем count на 1.
    # Иначе добавляем пару к словарю со значением count, равным 1.
    if s in counts:
        counts[s] = counts[s] + 1
    else:
        counts[s] = 1
# Выводим все строки и счетчики
for k in counts:
    print(k, "появилась в словаре", counts[k], "раз")

